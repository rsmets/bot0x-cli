/**
 * Generates a shell script for AWS environment commands
 * Usage: bot0x shellScript [--print]
 */
import { Command } from 'commander';
import { fileURLToPath } from 'url';
import { dirname, resolve } from 'path';
import chalk from 'chalk';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

/**
 * Get the path to the bot0x.sh script
 * @returns {string} Absolute path to bot0x.sh
 */
export function getScriptPath() {
  // The script is in the root of the project
  return resolve(__dirname, '../../bot0x.sh');
}

/**
 * Generate the shell script content for commands that modify the shell environment
 * @returns {string} The shell script content
 */
function generateShellScript() {
  return `#!/bin/bash
# bot0x-env.sh: Shell functions for commands that modify the current shell environment
# Source this file in your ~/.zshrc or ~/.bashrc
# Generated by bot0x shellScript

# IMPORTANT: These commands need eval because they modify the current shell environment
# For all other commands, use: eval "$(bot0x alias)"

# AWS Switch Role - Switch AWS role and context
awssr() {
  eval "$(bot0x awsSwitchRole \"$@\")"
}

# AWS Profile - Switch AWS profile
awsp() {
  eval "$(bot0x switchAwsProfile \"$@\")"
}

# AWS Direct Role - Unset AWS credential environment variables
awsdr() {
  eval "$(bot0x awsdr \"$@\")"
}

# AWS Direct Role All - Run awsdr && awsrmfaa && kubectx for all environments
awsdrAll() {
  eval "$(bot0x awsdrAll \"$@\")"
}

# AWS MFA Role Automatically - Assume AWS MFA role automatically
awsrmfaa() {
  eval "$(bot0x assumeAwsMfaRoleAutomatically \"$@\")"
}

# AWS MFA - Generate AWS MFA token
awsmfa() {
  eval "$(bot0x awsMfa \"$@\")"
}

# Documentation:
# This file contains ONLY commands that need to modify your shell environment.
# For all other commands (like ccio, kbp, gitclean, etc.), use the alias feature:
# eval "$(bot0x alias)"
`;
}

/**
 * Print the generated shell script or its path
 * @param {Object} options Command options
 */
export function shellScriptHandler(options) {
  if (options.print) {
    // Print the generated shell script content
    console.log(generateShellScript());
  } else {
    // Print a message about how to use the command
    console.log(chalk.cyan('To use bot0x AWS environment commands, add this to your .zshrc or .bashrc:'));
    console.log(chalk.yellow('\neval "$(bot0x shellScript --print)"\n'));
    console.log(chalk.cyan('Or save it to a file and source it:'));
    console.log(chalk.yellow('\nbot0x shellScript --print > ~/.bot0x-aws.sh'));
    console.log(chalk.yellow('source ~/.bot0x-aws.sh\n'));
  }
}

const shellScript = new Command('shellScript')
  .description('Generate shell functions for AWS environment commands')
  .option('-p, --print', 'Print the shell script content')
  .action(shellScriptHandler);

export default shellScript;
